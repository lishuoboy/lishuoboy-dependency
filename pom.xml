<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.4.13</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>top.lishuoboy</groupId>
    <artifactId>lishuoboy-dependency</artifactId>
    <!--  @发正式版去掉结尾-SNAPSHOT。正式版不能覆盖更新已存在版本  -->
    <version>1.0-SNAPSHOT</version>
    <packaging>pom</packaging>
    <modules>
        <!--<module>lishuoboy-dependency-all</module>-->
        <module>lishuoboy-dependency-base</module>
        <module>lishuoboy-dependency-sb</module>
    </modules>

    <properties>
        <!--sb v2.*.* 默认就是java8 -->
        <!-- <java.version>1.8</java.version>-->

        <commons-io.version>2.10.0</commons-io.version>
        <commons-lang.version>2.6</commons-lang.version>
        <commons-logging.version>1.2</commons-logging.version>
        <commons-codec.version>1.15</commons-codec.version>
        <commons-collections.version>3.2.2</commons-collections.version>
        <commons-collections4.version>4.4</commons-collections4.version>
        <commons-beanutils.version>1.9.4</commons-beanutils.version>
        <commons-cli.version>1.4</commons-cli.version>
        <commons-fileupload.version>1.4</commons-fileupload.version>
        <commons-compress.version>1.20</commons-compress.version>
        <commons-text.version>1.9</commons-text.version>
        <commons-math3.version>3.6.1</commons-math3.version>
        <commons-configuration.version>1.10</commons-configuration.version>
        <commons-dbcp.version>1.4</commons-dbcp.version>

        <log4j.version>1.2.17</log4j.version>
        <log4j-jcl.version>2.9.1</log4j-jcl.version>

        <druid.version>1.2.5</druid.version>
        <c3p0.version>0.9.1.2</c3p0.version>

        <fastjson.version>1.2.80</fastjson.version>

        <xstream.version>1.4.10</xstream.version>
        <dom4j.version>2.1.3</dom4j.version>

        <hutool.version>5.7.22</hutool.version>
        <mail.version>1.4.7</mail.version>
        <jakarta-mail.version>1.6.7</jakarta-mail.version>
        <poi.version>5.0.0</poi.version>
        <poi-ooxml.version>5.0.0</poi-ooxml.version>
        <mybatis.version>3.5.5</mybatis.version>
        <pagehelper.version>5.2.1</pagehelper.version>
        <jasypt.version>1.9.3</jasypt.version>
        <jxbrowser.version>7.12.2</jxbrowser.version>
        <jxbrowser-6.version>6.21</jxbrowser-6.version>
        <javacv-platform.version>1.5.6</javacv-platform.version>
        <guava.version>30.1.1-jre</guava.version>
        <jquery.version>3.6.0</jquery.version>
        <cglib.version>3.3.0</cglib.version>

        <servlet2-api.version>2.5</servlet2-api.version>
        <javaee-web-api.version>8.0.1</javaee-web-api.version>


        <!-- maven插件 ↓ -->
        <maven-site-plugin.version>3.12.1</maven-site-plugin.version>
        <wagon-ssh.version>3.5.2</wagon-ssh.version>

    </properties>

    <dependencies>
    </dependencies>

    <dependencyManagement>
        <dependencies>
            <!-- 0  lishuoboy 系列 -->
            <!--
            <dependency>
                <groupId>top.lishuoboy</groupId>
                <artifactId>lishuoboy-dependency-all</artifactId>
                <version>${project.version}</version>
            </dependency>-->
            <dependency>
                <groupId>top.lishuoboy</groupId>
                <artifactId>lishuoboy-dependency-base</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>top.lishuoboy</groupId>
                <artifactId>lishuoboy-dependency-sb</artifactId>
                <version>${project.version}</version>
            </dependency>

            <!-- 1  compile 系列 -->
            <!-- commons 系列，start，按流行度排序  -->
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons-io.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${commons-lang3.version}</version>
            </dependency>
            <!-- 2011年停更，用commons-lang3 -->
            <dependency>
                <groupId>commons-lang</groupId>
                <artifactId>commons-lang</artifactId>
                <version>${commons-lang.version}</version>
            </dependency>
            <!-- 2014年停更 -->
            <dependency>
                <groupId>commons-logging</groupId>
                <artifactId>commons-logging</artifactId>
                <version>${commons-logging.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>${commons-codec.version}</version>
            </dependency>
            <!-- 2015年停更，用commons-collections4 -->
            <dependency>
                <groupId>commons-collections</groupId>
                <artifactId>commons-collections</artifactId>
                <version>${commons-collections.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-collections4</artifactId>
                <version>${commons-collections4.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-beanutils</groupId>
                <artifactId>commons-beanutils</artifactId>
                <version>${commons-beanutils.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-cli</groupId>
                <artifactId>commons-cli</artifactId>
                <version>${commons-cli.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-fileupload</groupId>
                <artifactId>commons-fileupload</artifactId>
                <version>${commons-fileupload.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-compress</artifactId>
                <version>${commons-compress.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-text</artifactId>
                <version>${commons-text.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-math3</artifactId>
                <version>${commons-math3.version}</version>
            </dependency>
            <!-- 2013年停更 -->
            <dependency>
                <groupId>commons-configuration</groupId>
                <artifactId>commons-configuration</artifactId>
                <version>${commons-configuration.version}</version>
            </dependency>
            <!-- 2010年停更 -->
            <dependency>
                <groupId>commons-dbcp</groupId>
                <artifactId>commons-dbcp</artifactId>
                <version>${commons-dbcp.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-pool2</artifactId>
                <version>${commons-pool2.version}</version>
            </dependency>
            <!-- 2010年停更，用commons-pool2 -->
            <dependency>
                <groupId>commons-pool</groupId>
                <artifactId>commons-pool</artifactId>
                <version>${commons-pool.version}</version>
            </dependency>
            <!-- commons 系列，end，按流行度排序  -->

            <!-- 日志系列 start -->
            <!-- jdk log 不需要 -->
            <!-- log4j -->
            <dependency>
                <groupId>log4j</groupId>
                <artifactId>log4j</artifactId>
                <version>${log4j.version}</version>
            </dependency>
            <!-- log4j2 -->
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-api</artifactId>
                <version>${log4j2.version}</version>
            </dependency>
            <!-- log4j2  -->
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-core</artifactId>
                <version>${log4j2.version}</version>
            </dependency>
            <!--  logback  -->
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
            </dependency>
            <!-- logback-core  不需要 -->
            <!-- slf4j  -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <!-- slf4j jdklog 连接器 -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-jdk14</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <!-- slf4j log4j 连接器 -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-log4j12</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <!-- slf4j log4j2 连接器 -->
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-slf4j-impl</artifactId>
                <version>${log4j2.version}</version>
            </dependency>
            <!-- slf4j commons-logging 连接器 -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-jcl</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <!-- commons-logging，2014年停更，上面已经有啦 -->
            <!--
            <dependency>
                <groupId>commons-logging</groupId>
                <artifactId>commons-logging</artifactId>
                <version>${commons-logging.version}</version>
            </dependency>-->
            <!-- commons-logging  jdklog连接器 不需要  -->
            <!-- commons-logging log4j2连接器  -->
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-jcl</artifactId>
                <version>${log4j-jcl.version}</version>
            </dependency>
            <!-- commons-logging  logback 连接器 不需要  -->
            <!-- commons-logging slf4j连接器  -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>jcl-over-slf4j</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <!--  日志系列 end -->

            <!-- 数据库连接池 系列，start，按流行度排序  -->
            <dependency>
                <groupId>com.zaxxer</groupId>
                <artifactId>HikariCP</artifactId>
                <version>${hikaricp.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid</artifactId>
                <version>${druid.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.tomcat</groupId>
                <artifactId>tomcat-jdbc</artifactId>
                <version>${tomcat.version}</version>
            </dependency>
            <!-- 2010年停更，上面已经有啦 -->
            <!--
            <dependency>
                <groupId>commons-dbcp</groupId>
                <artifactId>commons-dbcp</artifactId>
                <version>${commons-dbcp.version}</version>
            </dependency>-->
            <dependency>
                <groupId>c3p0</groupId>
                <artifactId>c3p0</artifactId>
                <version>${c3p0.version}</version>
            </dependency>
            <!-- 数据库连接池 系列，end，按流行度排序  -->

            <!-- json序列化 系列，start，按流行度排序 -->
            <!--  jackson-databind 引用了 jackson-core 和 jackson-annotations   -->
            <dependency>
                <groupId>com.fasterxml.jackson.core</groupId>
                <artifactId>jackson-databind</artifactId>
                <version>${jackson-bom.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>${gson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>fastjson</artifactId>
                <version>${fastjson.version}</version>
            </dependency>
            <!-- json 序列化 系列，end，按流行度排序 -->

            <!-- xml 序列化 系列，start，按流行度排序 -->
            <dependency>
                <groupId>javax.xml.bind</groupId>
                <artifactId>jaxb-api</artifactId>
                <version>${javax-jaxb.version}</version>
            </dependency>
            <dependency>
                <groupId>com.thoughtworks.xstream</groupId>
                <artifactId>xstream</artifactId>
                <version>${xstream.version}</version>
            </dependency>
            <dependency>
                <groupId>org.dom4j</groupId>
                <artifactId>dom4j</artifactId>
                <version>${dom4j.version}</version>
            </dependency>
            <!-- xml 序列化 系列，end，按流行度排序 -->

            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-all</artifactId>
                <version>${hutool.version}</version>
            </dependency>
            <!-- 1、2013年 mail 1.4.7 升级为 javax.mail，2018年 javax.mail 1.6.2升级为 jakarta.mail
                 2、javax.mail 比 javax.mail-api 多了 com.sun.mail包
                 3、hutool 用 javax.mail，sb自带的是 javax.mail-api -->
            <dependency>
                <groupId>javax.mail</groupId>
                <artifactId>mail</artifactId>
                <version>${mail.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sun.mail</groupId>
                <artifactId>javax.mail</artifactId>
                <version>${javax-mail.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.mail</groupId>
                <artifactId>javax.mail-api</artifactId>
                <version>${javax-mail.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sun.mail</groupId>
                <artifactId>jakarta.mail</artifactId>
                <version>${jakarta-mail.version}</version>
            </dependency>
            <dependency>
                <groupId>jakarta.mail</groupId>
                <artifactId>jakarta.mail-api</artifactId>
                <version>${jakarta-mail.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi</artifactId>
                <version>${poi.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi-ooxml</artifactId>
                <version>${poi-ooxml.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient</artifactId>
                <version>${httpclient.version}</version>
            </dependency>
            <dependency>
                <groupId>org.mybatis</groupId>
                <artifactId>mybatis</artifactId>
                <version>${mybatis.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.pagehelper</groupId>
                <artifactId>pagehelper</artifactId>
                <version>${pagehelper.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-core</artifactId>
                <version>${hibernate.version}</version>
            </dependency>
            <dependency>
                <groupId>javax.persistence</groupId>
                <artifactId>javax.persistence-api</artifactId>
                <version>${javax-persistence.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jasypt</groupId>
                <artifactId>jasypt</artifactId>
                <version>${jasypt.version}</version>
            </dependency>
            <dependency>
                <groupId>org.seleniumhq.selenium</groupId>
                <artifactId>selenium-java</artifactId>
                <version>${selenium.version}</version>
            </dependency>

            <!-- jxbrowser-win64，收费，内部依赖了 jxbrowser。太大了，70M -->
            <dependency>
                <groupId>com.teamdev.jxbrowser</groupId>
                <artifactId>jxbrowser-win64</artifactId>
                <version>${jxbrowser.version}</version>
                <!-- v6版本免费 -->
                <!--<version>${jxbrowser-6.version}</version>-->
            </dependency>
            <!-- jxbrowser，免费 -->
            <dependency>
                <groupId>com.teamdev.jxbrowser</groupId>
                <artifactId>jxbrowser</artifactId>
                <version>${jxbrowser.version}</version>
                <!-- v6版本免费 -->
                <!--<version>${jxbrowser-6.version}</version>-->
            </dependency>
            <!-- javacv-platform  依赖了 opencv-platform。 太大了 800M  -->
            <dependency>
                <groupId>org.bytedeco</groupId>
                <artifactId>javacv-platform</artifactId>
                <version>${javacv-platform.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>
            <dependency>
                <groupId>org.webjars</groupId>
                <artifactId>jquery</artifactId>
                <version>${jquery.version}</version>
            </dependency>
            <dependency>
                <groupId>cglib</groupId>
                <artifactId>cglib</artifactId>
                <version>${cglib.version}</version>
            </dependency>

            <!-- 2  provided 系列 -->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${lombok.version}</version>
                <!--  provided 的不会传递,所以改为 compile,默认继承parent的scope -->
                <!--<scope>provided</scope>-->
            </dependency>
            <!-- servlet规范实现 api，tomcat内置,与servlet规范版本一致 -->
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>servlet-api</artifactId>
                <version>${servlet2-api.version}</version>
                <scope>provided</scope>
            </dependency>
            <!-- servlet规范实现 api，tomcat内置,与servlet规范版本一致，3.0之后的版本换了artifactId -->
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <version>${servlet-api.version}</version>
                <scope>provided</scope>
            </dependency>
            <!-- servlet规范实现 api，tomcat内置,与servlet规范版本一致，4.0.2之后的版本改为jakarta -->
            <dependency>
                <groupId>jakarta.servlet</groupId>
                <artifactId>jakarta.servlet-api</artifactId>
                <version>${jakarta-servlet.version}</version>
                <scope>provided</scope>
            </dependency>
            <!-- servlet规范实现 api 2，使用量极低 -->
            <dependency>
                <groupId>javax</groupId>
                <artifactId>javaee-web-api</artifactId>
                <version>${javaee-web-api.version}</version>
                <scope>provided</scope>
            </dependency>

            <!-- 3  runtime 系列 -->
            <dependency>
                <groupId>mysql</groupId>
                <artifactId>mysql-connector-java</artifactId>
                <version>${mysql.version}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>com.oracle.database.jdbc</groupId>
                <artifactId>ojdbc8</artifactId>
                <version>${ojdbc.version}</version>
                <scope>runtime</scope>
            </dependency>

            <!-- 4  test 系列 -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <!--  test 的不会传递,所以改为 compile,默认继承parent的scope -->
                <!--<scope>test</scope>-->
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-engine</artifactId>
                <version>${junit-jupiter.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <!-- pluginManagement 已经配置，这里可以不用配 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <configuration>
                    <!--默认为en-->
                    <locales>zh_CN</locales>
                </configuration>
            </plugin>
        </plugins>

        <pluginManagement>
            <plugins>
                <!-- maven版本高于3.6必须使用https。否则报错。 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-site-plugin</artifactId>
                    <!-- 指定版本。默认版本3.3太旧，会报错 -->
                    <version>${maven-site-plugin.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
        <!-- 配置自动部署linux的扩展。支持其他插件的scp协议，如插件wagon-ssh、maven-site-plugin。 -->
        <extensions>
            <extension>
                <groupId>org.apache.maven.wagon</groupId>
                <artifactId>wagon-ssh</artifactId>
                <version>${wagon-ssh.version}</version>
            </extension>
        </extensions>
    </build>

    <!-- 制品库管理.  -->
    <distributionManagement>
        <!--<status></status>-->
        <!--<repository>、<snapshotRepository> 迁移到<profile>中 -->
        <!--
        <repository>
        </repository>
        <snapshotRepository>
        </snapshotRepository>
        <relocation>
        </relocation>-->
        <!-- 执行mvn clean site site:deploy命令，将site的html们上传服务器。-->
        <!--
        <site>
            <id>tomcat</id>
            <name>汤姆猫</name>
            <url>file://D:/ProgramMe/tomcat/apache-tomcat-9.0.52/webapps/lishuoboy-dependency</url>
        </site>-->
        <site>
            <!-- id必须与setting.xml的<server>一致 -->
            <id>AliECS</id>
            <name>阿里云服务器</name>
            <url>scp://www.lishuoboy.top/data/nginx/html/lishuoboy-dependency/site</url>
        </site>
    </distributionManagement>

    <profiles>
        <profile>
            <!-- 中央制品库 -->
            <id>ossrh</id>
            <properties>
                <!-- <distributionManagement>的<repository>、<snapshotRepository>与<properties>的<altReleaseDeploymentRepository>、<altSnapshotDeploymentRepository。二选一即可 -->
                <!-- 中央库 deploy releases -->
                <!-- 先在settings.xml配置<server>中的id、用户名、密码。此处id(ossrh)必须与<server>中的id一致。 -->
                <!--
                <altReleaseDeploymentRepository>
                    ossrh::default::https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/
                </altReleaseDeploymentRepository>-->
                <!-- 中央库 deploy snapshots -->
                <!-- 先在settings.xml配置<server>中的id、用户名、密码。此处id(ossrh)必须与<server>中的id一致。 -->
                <altSnapshotDeploymentRepository>
                    ossrh::default::https://s01.oss.sonatype.org/content/repositories/snapshots/
                </altSnapshotDeploymentRepository>
            </properties>
            <!-- 制品库管理 -->
            <distributionManagement>
                <!--<status></status>-->
                <!-- <distributionManagement>的<repository>、<snapshotRepository>与<properties>的<altReleaseDeploymentRepository>、<altSnapshotDeploymentRepository。二选一即可 -->
                <!--
                <repository>
                    &lt;!&ndash; 先在settings.xml配置<server>中的id、用户名、密码。此处id(ossrh)必须与<server>中的id一致。 &ndash;&gt;
                    <id>ossrh</id>
                    <name>中央库-releases中转库</name>
                    <layout>default</layout>
                    <url>https://s01.oss.sonatype.org/service/local/staging/deploy/maven2/</url>
                </repository>-->
                <!-- 与settings.xml文件profile的属性 altReleaseDeploymentRepository、altSnapshotDeploymentRepository二选一即可 -->
                <snapshotRepository>
                    <!-- 先在settings.xml配置<server>中的id、用户名、密码。此处id(ossrh)必须与<server>中的id一致。 -->
                    <id>ossrh</id>
                    <name>中央库-snapshots</name>
                    <layout>default</layout>
                    <url>https://s01.oss.sonatype.org/content/repositories/snapshots/</url>
                </snapshotRepository>
                <!-- 替换 GAV  -->
                <!--
                <relocation>
                    <groupId>top.lishuoboy</groupId>
                    <artifactId>lishuoboy-dependency</artifactId>
                    <version>1.0-SNAPSHOT</version>
                    <message>替换于top.lishuoboy:lishuoboy-dependency:1.0-SNAPSHOT</message>
                </relocation>-->
            </distributionManagement>
            <build>
                <plugins>
                    <!-- 生成 source  -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-source-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>attach-sources</id>
                                <goals>
                                    <!-- jar/jar-no-fork目标默认绑定package阶段 -->
                                    <goal>jar-no-fork</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <!-- 生成 javadoc。插件日志乱码解决：配置环境变量JAVA_TOOL_OPTIONS为-Dfile.encoding=UTF-8 -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-javadoc-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>attach-javadocs</id>
                                <goals>
                                    <!-- jar目标默认绑定package阶段 -->
                                    <goal>jar</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <!-- 跳过 JAVA8 变态的注释检查-->
                            <doclint>none</doclint>
                        </configuration>
                    </plugin>
                    <plugin>
                        <!-- 需提前安装gpg软件生成密钥对。参考官网 https://central.sonatype.org/publish/requirements/gpg/#installing-gnupg -->
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-gpg-plugin</artifactId>
                        <version>3.0.1</version>
                        <executions>
                            <execution>
                                <id>attach-javadocs</id>
                                <goals>
                                    <!-- sign目标默认绑定verify阶段 -->
                                    <goal>sign</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <!-- 配置gpg密码。不用每次执行sign目标都输入密码 -->
                            <!--<passphrase></passphrase>-->
                            <!-- gpg.exe的路径。如已配置环境变量，不需配置 -->
                            <!--<executable></executable>-->
                        </configuration>
                    </plugin>
                    <!--  中央库部署release的插件。会自动close+自动release。配置此插件后可以不用配置<distributionManagement>和<altReleaseDeploymentRepository>的release库  -->
                    <!-- 注意：nexus-staging-maven-plugin此插件导致<properties>的<altSnapshotDeploymentRepository>失效，需启用<distributionManagement>、<snapshotRepository> -->
                    <plugin>
                        <groupId>org.sonatype.plugins</groupId>
                        <artifactId>nexus-staging-maven-plugin</artifactId>
                        <version>1.6.13</version>
                        <extensions>true</extensions>
                        <configuration>
                            <!-- 此id必须与settings.xml中指定的一致。映射<server>中的用户名密码 -->
                            <serverId>ossrh</serverId>
                            <nexusUrl>https://s01.oss.sonatype.org/</nexusUrl>
                            <!-- 在close后自动release -->
                            <autoReleaseAfterClose>true</autoReleaseAfterClose>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>

</project>